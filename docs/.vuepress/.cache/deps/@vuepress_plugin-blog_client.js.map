{
  "version": 3,
  "sources": ["../../.temp/blog/category.js", "../../.temp/blog/store.js", "../../../../node_modules/.pnpm/@vuepress+plugin-blog@2.0.0-rc.18_vuepress@2.0.0-rc.8/node_modules/@vuepress/plugin-blog/lib/client/composables/useBlogCategory.js", "../../.temp/blog/type.js", "../../../../node_modules/.pnpm/@vuepress+plugin-blog@2.0.0-rc.18_vuepress@2.0.0-rc.8/node_modules/@vuepress/plugin-blog/lib/client/composables/useBlogType.js"],
  "sourcesContent": ["export const categoriesMap = {\"category\":{\"/\":{\"path\":\"/category/\",\"map\":{\"History\":{\"path\":\"/category/history/\",\"indexes\":[0,1]},\"CategoryA\":{\"path\":\"/category/categorya/\",\"indexes\":[2,3,4,5,6,7,8,9,10,11,12,13]},\"CategoryB\":{\"path\":\"/category/categoryb/\",\"indexes\":[2,3,4,5,6,7,8,10,11,12]},\"CategoryC\":{\"path\":\"/category/categoryc/\",\"indexes\":[14,15]}}}},\"tag\":{\"/\":{\"path\":\"/tag/\",\"map\":{\"WWI\":{\"path\":\"/tag/wwi/\",\"indexes\":[1]},\"WWII\":{\"path\":\"/tag/wwii/\",\"indexes\":[0]},\"tag A\":{\"path\":\"/tag/tag-a/\",\"indexes\":[5,6,7,8,9,13]},\"tag B\":{\"path\":\"/tag/tag-b/\",\"indexes\":[5,6,7,8,9,13]},\"tag C\":{\"path\":\"/tag/tag-c/\",\"indexes\":[2,3,4,10,11,12]},\"tag D\":{\"path\":\"/tag/tag-d/\",\"indexes\":[2,3,4,10,11,12]},\"tag E\":{\"path\":\"/tag/tag-e/\",\"indexes\":[14,15]}}}}};\n\nif (import.meta.webpackHot) {\n  import.meta.webpackHot.accept();\n  if (__VUE_HMR_RUNTIME__.updateBlogCategory)\n    __VUE_HMR_RUNTIME__.updateBlogCategory(categoriesMap);\n}\n\nif (import.meta.hot)\n  import.meta.hot.accept(({ categoriesMap }) => {\n    __VUE_HMR_RUNTIME__.updateBlogCategory(categoriesMap);\n  });\n\n", "export const store = [\"/posts/archive2.html\",\"/posts/archive1.html\",\"/posts/article9.html\",\"/posts/article8.html\",\"/posts/article7.html\",\"/posts/article6.html\",\"/posts/article5.html\",\"/posts/article4.html\",\"/posts/article3.html\",\"/posts/article2.html\",\"/posts/article12.html\",\"/posts/article11.html\",\"/posts/article10.html\",\"/posts/article1.html\",\"/posts/sticky2.html\",\"/posts/sticky.html\"];\n", "import { categoriesMap } from '@temp/blog/category';\nimport { store } from '@temp/blog/store';\nimport { computed, readonly, shallowRef } from 'vue';\nimport { resolveRoute, usePageData, usePageFrontmatter, useRouteLocale, } from 'vuepress/client';\nconst categoryMapRef = shallowRef(categoriesMap);\nexport const blogCategoryMap = readonly(categoryMapRef);\nexport const useBlogCategory = (key) => {\n    const page = usePageData();\n    const frontmatter = usePageFrontmatter();\n    const routeLocale = useRouteLocale();\n    return computed(() => {\n        const mapKey = key ?? frontmatter.value.blog?.key ?? '';\n        if (!mapKey) {\n            console.warn(`useBlogCategory: key not found`);\n            // Fallback data\n            return { path: '/', map: {} };\n        }\n        if (!categoryMapRef.value[mapKey])\n            throw new Error(`useBlogCategory: key ${mapKey} is invalid`);\n        const currentMap = categoryMapRef.value[mapKey][routeLocale.value];\n        const result = {\n            path: currentMap.path,\n            map: {},\n        };\n        for (const category in currentMap.map) {\n            const categoryMap = currentMap.map[category];\n            result.map[category] = { path: categoryMap.path, items: [] };\n            for (const index of categoryMap.indexes) {\n                const { path, meta } = resolveRoute(store[index]);\n                result.map[category].items.push({\n                    path,\n                    info: __BLOG_META_SCOPE__ === ''\n                        ? meta\n                        : meta[__BLOG_META_SCOPE__],\n                });\n            }\n            if (page.value.path === categoryMap.path)\n                result.currentItems = result.map[category].items;\n        }\n        return result;\n    });\n};\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot))\n    __VUE_HMR_RUNTIME__.updateBlogCategory = (categoriesMap) => {\n        categoryMapRef.value = categoriesMap;\n    };\n", "      export const typesMap = {\"article\":{\"/\":{\"path\":\"/article/\",\"indexes\":[14,15,10,11,12,2,3,4,5,6,7,8,9,13]}},\"timeline\":{\"/\":{\"path\":\"/timeline/\",\"indexes\":[10,11,12,2,3,4,5,6,7,8,9,13,15,14,0,1]}}};\n      \nif (import.meta.webpackHot) {\n  import.meta.webpackHot.accept();\n  if (__VUE_HMR_RUNTIME__.updateBlogType)\n    __VUE_HMR_RUNTIME__.updateBlogType(typesMap);\n}\n\nif (import.meta.hot)\n  import.meta.hot.accept(({ typesMap }) => {\n    __VUE_HMR_RUNTIME__.updateBlogType(typesMap);\n  });\n\n      ", "import { store } from '@temp/blog/store';\nimport { typesMap } from '@temp/blog/type';\nimport { computed, readonly, shallowRef } from 'vue';\nimport { resolveRoute, usePageFrontmatter, useRouteLocale, } from 'vuepress/client';\nconst typeMapRef = shallowRef(typesMap);\nexport const blogTypeMap = readonly(typeMapRef);\nexport const useBlogType = (key) => {\n    const frontmatter = usePageFrontmatter();\n    const routeLocale = useRouteLocale();\n    return computed(() => {\n        const mapKey = key ?? frontmatter.value.blog?.key ?? '';\n        if (!mapKey) {\n            console.warn(`useBlogType: key not found`);\n            // Fallback data\n            return { path: '/', items: [] };\n        }\n        if (!typeMapRef.value[mapKey])\n            throw new Error(`useBlogType: key ${key} is invalid`);\n        const configMap = typeMapRef.value[mapKey][routeLocale.value];\n        const result = {\n            path: configMap.path,\n            items: [],\n        };\n        for (const index of configMap.indexes) {\n            const { path, meta } = resolveRoute(store[index]);\n            result.items.push({\n                path,\n                info: __BLOG_META_SCOPE__ === ''\n                    ? meta\n                    : meta[__BLOG_META_SCOPE__],\n            });\n        }\n        return result;\n    });\n};\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot))\n    __VUE_HMR_RUNTIME__.updateBlogType = (typesMap) => {\n        typeMapRef.value = typesMap;\n    };\n"],
  "mappings": "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",
  "names": ["categoriesMap", "categoriesMap", "typesMap", "resolveRoute", "usePageFrontmatter", "useRouteLocale", "typesMap"]
}
